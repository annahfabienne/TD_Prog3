openapi: 3.0.0
info:
  title: Review API1_PROG3
  version: 1.0.0
servers:
  - url: https://prog3API_server.com
    description: Mock server for testing
paths:
  /groups:
    get:
      summary: Get a list of groups
      parameters:
        - name: groupName
          in: query
          description: Filter group by groupName
          schema:
            type: string
        - name: startDate
          in: query
          description: Start date of interval date
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date of interval date
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved the list of groups
    post:
      summary: Add new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '201':
          description: Group created successfully
    put:
      summary: Update group information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '200':
          description: Group updated successfully
    delete:
      summary: Delete group by groupName
      responses:
        '200':
          description: Group deleted successfully

  /students:
    get:
      summary: Get a list of students
      parameters:
        - name: studentName
          in: query
          description: Filter students by studentName
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of students
    post:
      summary: Add new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '201':
          description: Student added successfully
    put:
      summary: Update student information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '200':
          description: Student updated successfully
    delete:
      summary: Delete student by ID
      responses:
        '200':
          description: Student deleted successfully

components:
  schemas:
    group:
      type: object
      properties:
        id:
          type: integer
        groupName:
          type: string
        groupYear:
          type: string
          format: date
        promotion:
          type: string
          enum: [G, H, J, K]
        studentNb:
          type: integer
        students:
          type: array
          items:
            $ref: '#/components/schemas/student'

    student:
      type: object
      properties:
        id:
          type: integer
        studentName:
          type: string
        studentSex:
          type: string
          enum: [M, F]
        studentBirthday:
          type: string
          format: date
        reference:
          type: string
        group:
          type: string
