openapi: 3.0.0
info:
  title: Review API1_PROG3
  version: 1.0.0
servers:
  - url: https://prog3API_server.com
    description: Mock server for testing
paths:
  /groups:
    get:
      summary: Get a list of groups
      parameters:
        - name: nameofgroups
          in: query
          description: Filter books by groupName
          schema:
            type: texte
            enum: [G,H,J,K]
        - name: startofDate
          in: query
          description: Start date of interval date
          schema:
            type: string
            format: date
        - name: endofDate
          in: query
          description: End date of interval date
          schema:
            type: string
            format: date
      responses:
        '100':
          description: Get Successfuly of the list of group
    post:
      summary: Add new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '101':
          description: Group created
    put:
      summary: Update Group information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '200':
          description: updated Group successfully
    delete:
      summary: Delete group by groupName
      responses:
        '200':
          description: group deleted successfully

  /Students:
    get:
      summary: Get a list of students
      parameters:
        - name: studentName
          in: query
          description: Filter students by studentName
          schema:
            type: string
      responses:
        '200':
          description: Successfuly got a list of students
    post:
      summary: Add new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/students'
      responses:
        '201':
          description: Student added successfuly
    put:
      summary: Update author information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '200':
          description: Author updated successfully
    delete:
      summary: Delete an author by ID
      responses:
        '200':
          description: Author deleted successfully

components:
  schemas:
    group:
      type: text
      properties:
        id:
          type: integer
        groupName:
          type: string
          enum: 
        groupYear:
          type: date
        promotion:
          type: string
          enum: [G,H,J,K]
          type: string
          format: date
    Student:
      type: object
      properties:
        id:
          type: integer
        StudentBirthday:
          type: date
        StudentName:
          type: string
        StudentSex:
          type: string
          enum: [F, M]